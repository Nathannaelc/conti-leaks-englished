LAN SCANNER
TERMS OF REFERENCE

Write a scanner that gets system information about computers on the local network.

Terms and Requirements:
1. The domain administrator's name/password is set as input.
2. The required list of information in appendix 1.
3. The total number of network requests is minimized as much as possible.
4. If it is possible to minimize/compress/encrypt network traffic - do it.
Depends on Windows services and services answering our requests.
5. Architecturally, the scanner is a single program. In the sense that it has no response part/stagers/agents,
that would need to be uploaded over the network and run, before performing a scan.
That is, the program only pulls the regular Windows services on the remote hosts and relies on them completely.
6. The implementation language is C++ or C#.
PowerShell/.bat scripts end up in whole chunks in the Windows system log, that's why execution in the form of a script is not suitable.
7. The execution as a .dll 32/64 bit, according to the document "Code and Builds Formatting".
Entry point is compatible with Cobalt Strike loads.
Size of .dll up to 1 megabyte.
Must be able to pass launch parameters to the .dll.
8. Provide for multi-threading, and scanning priorities.
Optimize for scanning networks of 1k nodes and more.

APPENDIX 1
List of received information (commands)
systeminfo
"---//---"
tasklist /v
"---//---"
ipconfig /all
"---//---"
netstat -abno
"---//---"
$Apps = @()
$Apps += Get-ItemProperty "HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall\*"
$Apps += Get-ItemProperty "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\*"
foreach($a in $Apps) {$a}
"---//---"
net share
"---//---"
net sessions
"---//---"
Get-WmiObject -Class Win32_logicaldisk
"---//---"
gci -force "C:\users\*" -ErrorAction SilentlyContinue
gci -force "C:\users\*\*" -ErrorAction SilentlyContinue | % {
        $size = [math]::Round($_.Length/ 1Mb,2).ToString() + " MB"
        $lastTime = $_.LastWriteTime.ToString('yyyy-MM-dd HH:mm:ss')
        $file = $_.FullName
        $out = "[$lastTime] {$size}`t $file"
        $out
    }
"---//---"
gci -force "C:\program files\*" -ErrorAction SilentlyContinue
gci -force "C:\program files (x86)\*" -ErrorAction SilentlyContinue
"---//---"
get-date
"---//---"
netsh advfirewall firewall show rule name=all

From the first systeminfo command, only the following fields are needed:
	Name: Microsoft Windows Server 2012 R2 Standard|C:\Windows|\Device\Harddisk0\Partition2
	BuildNumber: 9600
	CountryCode: 1
	CSName: DC
	Version: 6.3.9600
	WindowsDirectory: C:\Windows
	OSArchitecture: 64-bit
	Organization:
	Manufacturer: Microsoft Corporation
	Locale: 0409
	LocalDateTime: 2021-04-27 16:18:32
	InstallDate: 2020-08-23 23:40:03
	LastBootUpTime: 2021-04-23 21:23:39
	SerialNumber: 00252-70000-00000-AA072
	RegisteredUser: Windows User
